<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	<!-- 
		scope属性：缺省值是singleton,即一个bean
		只会创建一个实例。如果值是prototype,
		则每getBean一次，都会创建一个新的实例。
		注：
		容器启动之后，会扫描整个配置文件，将
		所有作用域为singleton的bean事先创建好。
	 -->
	<!--   
	<bean id="mb1" 
	class="container.other.MessageBean" 
	scope="prototype"/>
	-->
	
	<!-- 
		生命周期相关的方法。
		init-method属性：指定初始化方法。
		destroy-method属性：指定销毁方法。
		只有scope="singleton"的bean销毁方法
		才有效。
	 -->
	<!-- 
	<bean id="mb2" 
	class="container.other.MessageBean"
	init-method="init" 
	destroy-method="destroy" 
	scope="prototype"/>
	 -->
	
	<!-- 
		延迟加载：
		lazy-init="true"时，表示延迟加载。
	 --> 
	<bean id="mb3" 
	class="container.other.MessageBean" 
	lazy-init="true"/> 
	 
	
	
	
</beans>