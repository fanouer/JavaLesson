为啥要有面向对象？构建可以反复“重用”的程序
  组件，使程序开发实现组件化，规模化！


对象
属性
类 
方法
方法重载
构造器
继承


1 Java在运行期间按需将类加载到方法区！
2 方法中的局部变量（含方法参数,this）
  在栈分配
3 Java运行期间对象在堆中分配

4 栈中的局部变量管理
  1） 声明时候分配内存
  2） 离开作用域时候，从栈中销毁

5 堆中的对象
  1） 使用new运算时候，在堆中分配对象
     对象包含对象的属性（实例变量）
  2）当对象不被引用时候，由垃圾回收器
    负责回收对象空间（回收实例变量）。
6 如上的规则称为Java内存管理！
 
7 Java可以发生内存泄露
  1）往往是人为照成内存泄露：解决方案
   对象使用以后及时将变量设置null









重写和重载的区别
  重载：在一个类型，方法名相同,参数不同的
    方法。重载的方法是完全不同的方法！
    只是方法名一样！
    重载的使用目的：就是为了是类的声明更加
    优雅，好看！
   父子类型之间，方法名一样，参数不同的方法
   也是重载！

  重写：子类中存在！子类修改父类的方法(功能)
    子类提供一个与父类一样方法（方法名
    和参数）
    修饰词：可以更加开放
    异常：可以更加具体
    返回值：可以更加具体（子类型）

 调用规则：
   重载调用：根据变量的类型找到适当的方法！
   调用重写方法：调用对象重写以后的方法

package：对类(程序组件)进行分类的！
import：用于在一个包中访问另外包中类
  java.lang 包是自动import的。
  
  如果命名冲突时候，不能使用import语句了
  必须使用类全名: 包名.类名。


访问修饰词：要点
  1 在默认情况下，尽量使用private 修饰
  属性和方法，做得尽量封装。
  2 如果确实需要开放访问的属性和方法，
  再使用 public 修饰，让属性或方法在任何
  地方都可以访问。
  3 尽量避免使用 默认的修饰。
  4 如果确实是给子类使用的属性，要使用
  保护的（protected）修饰。

day11
  |-- Xoo
       |-- protected int a;
day11.pm
  |-- Yoo extends Xoo
       |-- test(){ println(a); }
        








