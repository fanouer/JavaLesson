刘雪松

13146698888
liuxs@tedu.cn

二进制

1、什么二进制？
	逢二进一的计数规则
	7进制
	16进制
	12进制
	360
2、计算机为什么采用二进制？
	设备制造成本最优

3、如何使用二进制
	
	世界上有10种人，一种是懂二进制的，一种是不懂二进制。

	计算机的内部一切都是二进制数据
	int num =15;//15->1111
	System.out.println(num);//15
	
	java通过算法自动的实现了10进制数输入与输出
	Integer.ParsInt
	Integer.toString

	二进制的转换
	
	2->10:所有二进制的权值相加
	
	11000101
	11000101
128*1+64*1+32*0+16*0+8*0+4*1+2*0+1*1=197

10101010
	10->2:十进制数连续减小于数本身的所有权，减得开记1，减不开记0，顺序输出得二进制数

	197
		128 1
	=69	64  1
	=5	32  0
	=5	16  0
	=5	8   0
	=5	4   1
	=1	2   0
	=1	1   1

	220	

	补码

	什么是补码？是一种算法，用无符号数表示有符号数的计数规则。

	规律：
	1-补码有范围，4位范围是-8--7
	2-范围内计算，支持数学运算规则
	3-超范围计算，会溢出，不支持数学规则
	4-通过扩大位数，扩大补码范围
	
	补码的最大值，最小值和-1

	溢出的规律：
	最大值+1得最小值
	最小值-1得最大值

	n+(max+1)*2=n

	取反：0->1 1->0
	补码中任意数取反加1得到其相反数
	正负数过渡的四个数除外。
	
	十六进制
	什么是十六进制？
	逢十六进一的计数规则。
	对二进制的简写
	
	0 ==== 0000
	1 ==== 0001
	2 ==== 0010
	3 ==== 0011
	4 ==== 0100
	5 ==== 0101
	6 ==== 0110
	7 ==== 0111
	8 ==== 1000
	9 ==== 1001
	a ==== 1010
	b ==== 1011
	c ==== 1100
	d ==== 1101
	e ==== 1110
	f ==== 1111

	1100 1010
	c    a
	int a=0xca

	0111 1111 1111 1111 1111 1111 1111 1111
7    f
	





	二进制的运算
	运算符：取反、左移位、右移位
	逻辑右移位、按位或、按位与
	
	~
	左移位：<<
	规则：无论正负数，高位舍弃，低位补0
	00000000000000000000000000001111
15<<1   00000000000000000000000000011110
15<<2	00000000000000000000000000111100
15<<8	00000000000000000000111100000000
	
	右移位：>>
	规则：
	正数，高位补0，低位舍弃
	负数，高位补1，低位舍弃
	00000000000000000000000000001111
15>>1	00000000000000000000000000000111
15>>2	00000000000000000000000000000011
	
	逻辑右移位:>>>
	规则：无论正负数，高位补0，低位舍弃
	按位或：| 不进位的加法
	规则：
	0|0=0
	0|1=1
	1|0=1
	1|1=1

	按位与：& 按位的乘法
	0&0=0
	0&1=0
	1&0=0
	1&1=1
	
	左移位的数学意义：
	
	13140.		原数*10（基数）
	131400.0	原数*10*10（基数

	十进制：向左移动一次，原数*10

	二进制：向左移动一次，原数*2

	如何对一个整数10，做最快的乘以8的运算
	10<<3


	右移位的数学意义：

	二进制：向右移动一次，原数/2
	5>>1  2

	按位与:	Mask 掩码运算
 00000000000000000000000000101111
	&00000000000000000000000000000011
----------------------------------
			       11
	47%4
	&1   1位掩码 对2进行取模
	&11  2位掩码 对4进行取模
	&111 3位掩码 对8进行取模

	R=255
	G=99
	B=49
R 00000000000000000000000011111111
G 00000000000000000000000001100011
B 00000000000000000000000000110001

RGB=R<<16|G<<8|B
	
	合并<< |
	拆分>>> &




	编码的问题
	什么是编码？
	
	UTF-16BE
	定长的编码方案
	65535
	中英文都占2个字节
	
	UTF-8
	变长的编码方案
	英文占1字节
	中文占3字节
	10万+

	GBK
	变长的编码方案
	英文占1字节
	中文占2字节
	2万+

	




