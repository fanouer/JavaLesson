day02 实现步骤
显示Hero
 1 读取全部图片到World类的静态属性中
 2 为Hero增加构造器，传递hero的图片属性
 3 创建Hero时候传递，hero的图片
 4 重构 paint方法，显示hero对象的图片

实现天空动态效果
 1 在World类中增加定时器对象，用于定时执行
 2 在World类中增加 action方法用于启动定时
   器
 3 在World main方法中调用 action启动 
  定时器。
 4 重构 Sky的 move方法，用于计算天空图片的
 的坐标位置。
 5 重构Sky，添加paint方法用于绘制 天空的图片
 6 重构 World类的paint方法绘制天空对象
 7 在定时器的run方法中，调用 sky.move() 
   和repaint方法，移动天空的位置，并且重绘面板
 测试动态效果。

为全部的飞行物增加绘制方法
 1 在FlyingObject类上增加paint方法，这样
 所有的飞行物子类型都包含了 绘制方法。Sky类
 绘制方法特殊，重写绘制方法即可。
 
实现Hero随着鼠标运动
 1 在action添加鼠标监听器对象
   MouseAdapter l =
			new MouseAdapter()
 2 将鼠标事件监听器绑定到当前面板
   this.addMouseMotionListener(l); 
 3 在鼠标监听器中获取鼠标当前位置，并且将英雄
 设置到鼠标的当前位置。
 4 当英雄位置改变以后，会与每秒更新30帧配合，显示
   英雄在随着鼠标移动的效果

增加飞机的射击功能
  1 为子弹添加构造器，利用xy初始化子弹的位置
  2 在World类中增加 射击方法 shoot()
    算法逻辑：调用6次创建一个子弹对象，添加到子弹集合。
    子弹出场的位置是飞机头的中部。
  3 在主定时器中调用 射击方法 
  4 在主定时器中添加每个子弹移动的算法
  5 更新paint方法，添加绘制每个子弹的算法。
  6 在FlyingObject中添加 检查出界的方法 outOfBounds
  7 在Bullet重写outOfBounds方法。
  8 在World中添加方法clearObjects() 用于清理已经
  出界的子弹对象
  9 在主定时器中调用 clearObjects方法清除已经出界
  的子弹对象。
    
子弹对象的生存周期：
 
 
 
    
   
 
 
 
 
 
 
 
 