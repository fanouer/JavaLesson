# db params
driver=oracle.jdbc.OracleDriver
url=jdbc:oracle:thin:@192.168.201.211:1521:orcl
user=openlab
pwd=open123
# DataSource params
initSize=1
maxActive=3
try 
	 		{
	 			String softPath;
		        String url;
		        Properties p = new Properties();
	 			p.load(Tool.class.getClassLoader().getResourceAsStream("util/config.properties"));
	 			softPath = p.getProperty("softPath");
	 			url = p.getProperty("url");
	 		}
	 		catch (IOException e)
	 		{
	 			e.printStackTrace();
	 			throw new RuntimeException(
	 				"打开配置文件失败", e);
	 		}
	 		
	 		Socket so = new Socket(InetAddress.getLocalHost(), 3036); 
	 		OutputStreamWriter osw = new OutputStreamWriter(so.getOutputStream());  
            StringBuffer sb = new StringBuffer();  
            sb.append("GET /HttpStream/gb2312.jsp HTTP/1.1\r\n");  
            sb.append("Host: localhost:8088\r\n");  
            sb.append("Connection: Keep-Alive\r\n");  
            //注，这是关键的关键，忘了这里让我搞了半个小时。这里一定要一个回车换行，表示消息头完，不然服务器会等待  
            sb.append("\r\n");  
            osw.write(sb.toString());  
            osw.flush();  
	 		
	         //String newSoftPath =softPath.replace("\\\\","\\");
	         System.out.println(softPath);
	         System.out.println(url);
	         Runtime.getRuntime().exec(softPath);
	         Scanner in=new Scanner(System.in);
	         String readLine = in.nextLine();
	         if("1".equals(readLine))
	         {
	        	 System.out.println("关闭软件");
	        	 //Process objProcess = Runtime.getRuntime().exec("cmd /c Everything64.exe");	
	         }
	         Scanner s = new Scanner(System.in);
	         String flag = s.nextLine();
	         if("0".equals(flag)){
	        	 System.out.println("关闭服务器");
	        	 System.exit(0);
	         }
		}